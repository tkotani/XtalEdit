################################################################################
## Make "crystr.in" ############################################################
	fw = open("crystr.in","wt")
	SiteNum	= len(Site)
	TypeNum= len(Type)
	fw2=open("parameter.data","wt")
	fw2.write(str(SiteNum))
	fw2.close()
	
	
	fw.write("     %1d  !mode switch for computation. Next line is generators\n" % arg)
	try:
		fw.write("       "+GEN)
		OrgGenKey	="Exist"
	except:
		OrgGenKey	="Nothing"
		fw.write("       ")
	fw.write("\n       %19.15f !alat\n" % a)

	import ConstantData
	try:
		sxz1	="       %19.15f      %19.15f      %19.15f\n" % (PV1[0]/a
															,PV1[1]/a
															,PV1[2]/a)
		sxz2	="       %19.15f      %19.15f      %19.15f\n" % (PV2[0]/a
															,PV2[1]/a
															,PV2[2]/a)
		sxz3	="       %19.15f      %19.15f      %19.15f\n" % (PV3[0]/a
															,PV3[1]/a
															,PV3[2]/a)
		fw.write(sxz1)
		fw.write(sxz2)
		fw.write(sxz3)
		PVMat= inverse(transpose(array([PV1,PV2,PV3])))
		PVec = ["PV1","PV2","PV3"]
	except:
		print "RunError, PV"
		sys.exit(0)

	typedic = {}
	i = 1
	for key in Type.keys():
		typedic[key] = i
		i=i+1

	fw.write("   %3d  !nbas\n" % SiteNum)
	for i in range(SiteNum):

		pt	=	Site[i]["PosData"]

		fw.write("       %19.15f      %19.15f      %19.15f  %3d\n" \
					% (  pt[0]/a	,pt[1]/a
						,pt[2]/a	,typedic[Site[i]["TYPE"]]))

	fw.write("  %3d  !ntyp\n" % TypeNum)

	ntypedic = {}
	for i2 in range(len(typedic)):
		i = i2+1
		for key in typedic.keys():
			if typedic[key]==i:
				try:
					rtin	=	string.atof(Class[key]["RMT"])
					fw.write("        %s       %3s\n" % (key,TYPE[key]["RMT"]))
				except:
					fw.write("        %s       0.0\n" % key)
				ntypedic[i] = key
	fw.close()
	
################################################################################
## Environment #################################################################
## Python Exec. Command ########################################################
	PythonExe   = "python"
	
## OS Setting ##################################################################
#ExeString		=	(PythonExe,	" > "," 2> ")
	ExeString		=	(PythonExe,	" > "," 2>")
################################################################################
## Execute "csym" ##############################################################
	import os
	cwd = os.path.abspath(".")
	expath = os.path.join(cwd,"PythonFiles")
	exepath = os.path.join(cwd,"Generator")
#	if	os.name=="nt":
#		os.system("csym "+SysConf.ExeString[1]+"resultwin.data 2> reserr.data")
#	else:
#		os.system("./csym"+SysConf.ExeString[1]+"resultwin.data >& reserr.data") # 030307
	os.system(os.path.join(exepath,"csym" + ExeString[1] + "resultwin.data"+ ExeString[2] +"reserr.data"))

################################################################################
## read "crystr.out" and write Site data #######################################

#	try:
#		OrgGenKey	= GEN
#	except:
#		OrgGenKey	="Nothing"

	try:
		fr	= open("crystr.out","rt")
	except:
#		print "Run Error\n"
		fr	=	open("resultwin.data","rt")
		s	=	fr.readline()
		while 1:
			s	=	fr.readline()
			if	s=="":
				break
			s2	=	s
		fr.close()
		while 1:
			if s2[-1]!="\n":
				break
			s2	=	s2[:-1]
		print "*.csy is inconsistent. See output window."
		sys.exit(0)

	s	= fr.readline()			# 1
	GenKey	= fr.readline()		# 2: GEN Keyword
	for i in range(4):
		s = fr.readline()		# 3-6: Cut
	s = fr.readline()
	NSiteNum =  string.atoi(string.split(s)[0])	#SiteNum
	NSite = {}

	print "GEN "+string.lstrip(GenKey)

#	print 'xxxxxxxx a=',a
	for i in range(NSiteNum):
		s = fr.readline()
		if i<SiteNum:
			continue
#		print 'xxxxxxxx',s
		SiteInfo=	string.split(s)
		CNum	=	SiteInfo[3]
		SiteVEX	=	[string.atof(SiteInfo[0])*a
					,string.atof(SiteInfo[1])*a
					,string.atof(SiteInfo[2])*a]					# To a.u.
		SiteVPV	=	matrixmultiply(PVMat	,SiteVEX)								#PV base
		if SiteVPV	!=	[0.0,0.0,0.0]:
			Sign	= ["Z","Z","Z"]
			SiteVPVstr	=	["","",""]
			for i2 in range(3):
				if SiteVPV[i2]<0:
					Sign[i2]="-"
					SiteVPV[i2]	=	-SiteVPV[i2]
				elif SiteVPV[i2]>0:
					Sign[i2]="+"
				s = "%13.10f" % SiteVPV[i2]
				SiteVPVstr[i2] = s
			if Sign[0]=="-":
				Pos = " -"+SiteVPVstr[0]+" *"+PVec[0]+" "
			elif Sign[0]=="+":
				Pos = "  "+SiteVPVstr[0]+" *"+PVec[0]+" "
			else:
				Pos = "                     "
			for i2 in (1,2):
				if Sign[i2]!="Z":
					Pos = Pos+Sign[i2]+SiteVPVstr[i2]+" *"+PVec[i2]+" "
				else:
					Pos = Pos+"                    "
		else:
			Pos	=	"           0.0 *PV1 +          0.0 *PV2 +          0.0 *PV3"
		print "SITE TYPE=%s, POS=%s" % (ntypedic[string.atoi(CNum)], Pos)

	fr.close()

